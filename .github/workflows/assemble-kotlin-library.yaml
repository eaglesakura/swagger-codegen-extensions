####################################################################################
# Repository > Settings > Secrets:
# Bintray
#   MAVENCENTRAL_USERNAME     : maven user access token/username.
#   MAVENCENTRAL_PASSWORD     : maven user access token/password.
#   MAVENCENTRAL_PRIVATE_KEY  : base64 encoded private key.
#   MAVENCENTRAL_GPG_KEYID    : Signing keyId.
#   MAVENCENTRAL_GPG_PASSWORD : Signing password.
####################################################################################
name: assemble Kotlin library jar
on:
  - push
jobs:
  assemble-kotlin-artifacts:
    runs-on: ubuntu-20.04
    if: contains(github.event.head_commit.message, '[ci skip]') == false
    env:
      _JAVA_OPTIONS: "-Xmx4g -Dfile.encoding=UTF-8"
      TZ: Asia/Tokyo
      MAVENCENTRAL_USERNAME: ${{secrets.MAVENCENTRAL_USERNAME}}
      MAVENCENTRAL_PASSWORD: ${{secrets.MAVENCENTRAL_PASSWORD}}
      MAVENCENTRAL_GPG_KEYID: ${{secrets.MAVENCENTRAL_GPG_KEYID}}
      MAVENCENTRAL_GPG_PASSWORD: ${{secrets.MAVENCENTRAL_GPG_PASSWORD}}
    steps:
      - uses: actions/checkout@v2.0.0
      - name: "cache / gradle"
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: "environments / java"
        uses: actions/setup-java@v1
        with:
          java-version: "11"
      - name: "environments"
        run: |
          echo "GITHUB_REF=$GITHUB_REF"
          echo "PWD=$PWD"
          echo "PATH=$path"
          echo "java `java -version`: `which java`"
          gradle -v
          ls -al
      - name: "kotlin / test / format"
        run: |
          ./gradlew format
          if [ "`git diff | grep '.kt'`" != "" ]; then
            echo "kotlin format error"
            echo "run -> ./gradlew format"
            exit 1
          fi
      - name: "kotlin / build"
        run: |
          ./gradlew build
      - name: "kotlin / publish / test-results"
        if: ${{ always() }}
        uses: mikepenz/action-junit-report@v1
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: "kotlin / publish / mavencentral"
        run: |
          echo '${{secrets.MAVENCENTRAL_PRIVATE_KEY}}' | base64 -d > .github/sign/sign.gpg
          ./gradlew publish \
              --stacktrace
